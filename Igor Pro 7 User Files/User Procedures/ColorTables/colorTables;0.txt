#pragma rtGlobals=1		// Use modern global access method.menu "PlotData"	submenu "images"		"loadCT"		"loadCT-interactive"		"-"		"BytScl"		"Gamma"	endend|------------------- begin TOP LEVEL ----------------------proc loadCT(ctn)	variable ctn	prompt ctn, "New ColorTable", popup ColorNamesList()	silent 1;pauseupdate	|ctn-=1	string fname=num2str(ctn)+"."+colorTableNames[ctn]	if (ctn<=9)		fname="0"+fname	endif	loadwave/t/o/q/p=colorTablePath fname	print fname," --> ct wave"	currCTname=num2str(ctn)+". "+colorTableNames[ctn]endproc loadCTinteractive()	silent 1;pauseupdate	string wl=winlist("loadct_","","")	if (strlen(wl))		dowindow/f loadct_	else		loadct_()	endifendproc bytscl(wv, dest)	string wv;variable dest	prompt wv,"Wave to convert to 0-255", popup, wavelist("*",";","win:")	prompt dest,"Destination",popup "new;overwrite"	silent 1;pauseupdate	wavestats/q $wv	if (dest==1)		duplicate/o $wv $wv+"_b"		wv+="_b"	endif	$wv-=v_min	$wv*=255/(v_max-v_min)	print "byte-scaled data stored in "+wvendproc gamma(gam)		variable gam	silent 1;pauseupdate	duplicate/o ct temp_ct	make/n=256/o sss		sss =round(256*((p/256)^gam))	temp_ct[][0]=ct[sss[p]][0]	temp_ct[][1]=ct[sss[p]][1]	temp_ct[][2]=ct[sss[p]][2]	ct=temp_ct	|killwaves sss,temp_ct	endend|----------------------- begin LOW LEVEL --------------------------|make sure to have the following line at the beginning (otherwise won't initialize the 1st time)|string dummy=colorNamesList()Window loadct_() : Graph	PauseUpdate; Silent 1		| building window...	string dummy=colorNamesList()	Display /W=(362,48,629,132) as "LoadCT_"	AppendImage w_loadct	ModifyImage w_loadct cindex= ct	ModifyGraph margin(bottom)=50,width=216,height=22,wbRGB=(32768,54615,65535)	ModifyGraph nticks(left)=0	ModifyGraph font(bottom)="Geneva"	ModifyGraph fSize(bottom)=9	ModifyGraph axOffset(left)=-2.14286	Textbox/N=text0/F=0/Z=1/G=(1,12815,52428)/B=1/A=MC/X=-0.83/Y=81.82 "\\f01\\{currCTname}"	PopupMenu ChooseCT,pos={24,60},size={110,19},proc=loadCTpopupMenu,title="Choose Table"	PopupMenu ChooseCT,mode=0,value= #"s_colorNL"	Button gamma,pos={144,60},size={75,20},proc=popupGammaButton,title="Gamma…"EndMacro|does the initialization stuff which can't be done in function colorNamesList()proc ColorNameL()	silent 1;pauseupdate	pathinfo igor	NewPath/q ColorTablePath s_path+"User Procedures:ColorTables:Names & Tables"	loadwave/q/o/t/p=ColorTablePath "colorTableNames.awav"			string/g s_colorNL	string ans	iterate(numpnts(colorTableNames))		ans+=num2str(i)+". "+colorTableNames[i]+";"	loop	s_colorNL=ans	make/o/n=(255,20) w_loadct	w_loadct=p	|load an initial color table	loadwave/t/o/q/p=colorTablePath "03."+colorTableNames[3]	string/g currCTname="3. "+colorTableNames[3]endfunction/s ColorNamesList()	|create path to colors if it doesn't exist	pathinfo ColorTablePath	if (v_flag==0)		execute "colorNameL()"	endif	svar sc=s_colorNL	return scendFunction loadCTpopupMenu(ctrlName,popNum,popStr) : PopupMenuControl	String ctrlName	Variable popNum	String popStr	execute "loadct(" +   num2str(popnum-1)    +    ")"EndFunction popupGammaButton(ctrlName) : ButtonControl	String ctrlName	execute "gamma()"End